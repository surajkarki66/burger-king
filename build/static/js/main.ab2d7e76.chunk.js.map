{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Input/Input.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggledClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","modal","modalClosed","Modal","transform","opacity","button","Button","btnType","orderSummary","ingredientSummary","console","log","textTransform","purchaseCanceled","purchaseContinued","spinner","loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmed","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","pathname","onInitIngredients","sum","disableInfo","ings","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","OrderSummary","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCanceled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","Config","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","maxLength","valid","street","zipCode","minLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","inputChangedHandler","event","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","orderHandler","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","Input","loading","orders","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCanceledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","color","textAlign","fontSize","queryParams","fetchedOrders","err","Auth","password","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirected","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignup","routes","CheckOut","withRouter","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab2d7e76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__fTuX5\",\"load1\":\"Spinner_load1__1BXDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","const aux = ( props ) => props.children;\n\nexport default aux;","import React from 'react';  \nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height:  props.height}}>\n        <img src={burgerLogo} alt=\"BurgerKing\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport classes from './NavigationItem.module.css';\n\nconst navigationItem = ( props ) => (\n    <li className={classes.NavigationItem}>\n            <NavLink\n                to={props.link}\n                exact = {props.exact}\n                activeClassName={classes.active} >\n                \n             {props.children}\n            \n            </NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = ( props ) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        { props.isAuthenticated ?  <NavigationItem link=\"/orders\">Orders</NavigationItem> : null } \n        { !props.isAuthenticated ? \n        <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n        : <NavigationItem link=\"/logout\">Logout</NavigationItem>\n        }\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\n\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggledClicked}/>\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        \n        <nav className={classes.DesktopOnly}> \n            <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    //console.log(props.open)\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar \n                    drawerToggledClicked={this.sideDrawerToggleHandler}\n                    isAuth={this.props.isAuthenticated} />\n                <SideDrawer\n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null  //gives boolean\n    };\n};\n\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\nimport classes from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component{\n    render() {\n        let ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n    \n            case ('bread-top'):\n                ingredient = (<div className={classes.BreadTop}>\n                                <div className={classes.Seeds1}></div>\n                                <div className={classes.Seeds1}></div>\n                             </div>\n                             \n                             );\n                break;\n    \n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n    \n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n    \n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n    \n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n                \n            default: \n                ingredient = null;\n    \n            \n        }\n    \n        return ingredient;\n    \n    }\n  \n};\n\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};  \nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = ( props ) => {\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {  // Method to convert object into array\n                return <BurgerIngredient key={igKey + i} type={igKey} />; // key = salad1 type = 'salad\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);  // It is used to flat an array\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    \n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\nimport classes from './BuildControl.module.css'\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less}\n            onClick={props.removed}//\n            disabled= {props.disabled} // disabled gives either true or false\n            >Less</button> \n        <button\n             className={classes.More}\n             onClick={props.added}>More</button>\n    </div>\n\n);\n\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'}\n\n]\n\nconst buildControls = (props) => (            // jsx\n    <div className={classes.BuildControls}>   \n    <p><strong>Current Price: {props.price.toFixed(2)} $</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl\n              key={ctrl.label}\n              label={ctrl.label} \n              added = {()=> props.ingredientAdded(ctrl.type)}\n              removed = {()=> props.ingredientRemoved(ctrl.type)}\n              disabled = {props.disabled[ctrl.type]} />\n        ))}\n        <button className={classes.OrderButton}\n                disabled={!(props.purchasable)}\n                onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\n    </div>\n\n)\n\nexport default buildControls;","import React from 'react';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (   // wraping\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed} />\n    <div className={classes.Modal}\n         style={{\n             transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n             opacity: props.show ? '1' : '0'\n         }}>\n        {props.children}\n    </div>\n    </Aux>\n);\n\nexport default modal;","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button\n         className={[classes.Button, classes[props.btnType]].join(' ')}\n         disabled={props.disabled}\n         onClick={props.clicked}>\n        {props.children}\n    </button>\n);\n\nexport default button;","import React from 'react';  \nimport Aux from '../../../hoc/Aux';\nimport Button from '../../UI/Button/Button';\n\nconst orderSummary = (props) => {\n    const ingredientSummary =  Object.keys(props.ingredients)\n        .map(igKey => {\n            console.log(igKey)\n        return (<li key={igKey}><span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}</li>);\n        });\n    \n\n\n   \n\n    return (\n\n    <Aux>\n        <h3>Your Order</h3>\n        <p>A delicious burger with the following ingredients:</p>\n        <ul>\n            {ingredientSummary}\n        </ul>\n    <p><strong>Total Price: {props.price.toFixed(2)} $</strong></p>\n        <p>Continue to Checkout?</p>\n        <Button btnType=\"Danger\" clicked={props.purchaseCanceled} >CANCEL</Button>\n        <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\n    </Aux>\n    )\n};\n\nexport default orderSummary;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.loader}>Loading...</div>\n);\n\n\nexport default spinner;\n","import React, {Component} from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        UNSAFE_componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            })\n            this.resInterceptor = axios.interceptors.response.use(res=>res, error=> {\n                this.setState({error: error});\n            })\n        }\n\n        UNSAFE_componentWillUnmount () {\n            axios.interceptors.request.eject(this.reqInterceptor);   //Prevents memory leak\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n        errorConfirmed = ()=> {\n            this.setState({error:null});\n        }\n        render () {\n            return (  <Aux>\n                        <Modal\n                             show={this.state.error}\n                             modalClosed = {this.errorConfirmed}>\n                                 {this.state.error ? this.state.error.message : null}\n\n            \n\n                        </Modal>\n                        <WrappedComponent {...this.props} />\n                      </Aux>\n                      \n                    );\n        }\n    } \n}\n\nexport default withErrorHandler; ","import axios from 'axios';\n\n\nconst instance = axios.create({\n    baseURL: 'https://react-burgerking-c7ae3.firebaseio.com/'\n});\n\nexport default instance;","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');   // removing token after user logout\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT,\n    };\n \n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(()=> {\n            dispatch(logout())\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n       // console.log(isSignup)\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAqMH9FjzyJIS-NKbi_PUIKbXLyh_rgBMw';\n        if (!isSignup) {\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAqMH9FjzyJIS-NKbi_PUIKbXLyh_rgBMw';\n\n        }\n        //console.log(authData);\n        axios.post(url, authData)\n            .then(response=> {\n                //console.log(response);\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                //console.log(expirationDate);\n                localStorage.setItem('token', response.data.idToken);     // store the item in browser local storage\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', response.data.localId);\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                dispatch(checkAuthTimeout(response.data.expiresIn));\n            })\n            .catch(err=> {\n                //console.log(err);\n                dispatch(authFail(err.response.data.error));\n            });\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        }\n\n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <=  new Date()) {\n                dispatch(logout());\n            }\n\n            else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n            }\n\n        }\n    };\n};","export const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENTS';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';   \n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\n\n","import React, { Component } from \"react\";\nimport { connect} from 'react-redux';\n\n\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\n\nclass BurgerBuilder extends Component {\n    \n    state = {\n        purchasing: false,\n        \n    }\n\n    componentDidMount () {\n       // console.log(this.props);\n       this.props.onInitIngredients();\n    }\n    updatePurchaseState( ingredients ) {\n        const sum = Object.keys(ingredients).map(igKey => {\n            return ingredients[igKey];\n        })\n        .reduce((sum, el) => {\n            return sum + el;\n        }, 0);\n        \n\n        return sum > 0;\n        \n    }\n\n\n    purchaseHandler =  () => {\n        if (this.props.isAuthenticated) {\n            this.setState({purchasing: true});\n        }\n\n        else {\n            this.props.onSetAuthRedirectPath('/checkout');  // if user is not authenticated\n            this.props.history.push('/auth');\n        }\n       \n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push({\n            pathname: '/checkout',\n        });  // Goes to checkout \n\n\n    }\n   \n\n  \n\n    render() {\n        const disableInfo = {\n            ...this.props.ings   // Assigning state in immutable way\n        };\n        for (let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0  // return true or false\n            //{ salad: true, meat:false}\n            \n        }\n        let orderSummary = null;\n\n        let burger = <Spinner />;\n        if (this.props.ings) {\n               burger =  (\n                <Aux>\n                <Burger ingredients = {this.props.ings} />\n                <BuildControls\n                ingredientAdded = {this.props.onIngredientAdded}\n                ingredientRemoved = {this.props.onIngredientRemoved}\n                disabled = {disableInfo}\n                price = {this.props.price}\n                isAuth = {this.props.isAuthenticated}\n                purchasable = {this.updatePurchaseState(this.props.ings)} \n                ordered = {this.purchaseHandler}/>\n                </Aux>\n                \n                );\n                orderSummary =  <OrderSummary ingredients={this.props.ings}\n                purchaseCanceled={this.purchaseCancelHandler}\n                price = {this.props.price}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                   {orderSummary }\n                </Modal>\n                {burger}\n               \n            </Aux>\n            \n        );\n    }\n}\n\nconst mapStateToProps =  state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved:  (ingName) =>  dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () =>  dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path)) }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\n\nimport axios from '../../axios-orders';\n\n// Actioncreators\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENTS,\n        ingredientName: name,\n\n    };\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENTS,\n        ingredientName: name,   \n    };\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type:actionTypes.FETCH_INGREDIENTS_FAILED\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://react-burgerking-c7ae3.firebaseio.com/ingredients.json')\n            .then(response => {\n               dispatch(setIngredients(response.data));\n            })\n\n            .catch(error => {\n                dispatch(fetchIngredientsFailed());\n            });\n    };\n};\n\n","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\n\n\n// Action Creators\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type:actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n};\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json?auth=' + token, orderData)\n        .then(response=> {\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData))\n            \n           \n        })\n        .catch(error=> {\n            dispatch(purchaseBurgerFail(error))\n        });\n    };\n};\n\n//routing\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\n// Orders\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type:actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());  // dispatching to show spinner\n        const queryParams = '?auth=' + token;\n        axios.get('/orders.json' + queryParams)   // adding token\n        .then(res => {\n            const fetchedOrders = [];\n            for (let key in res.data) {\n                fetchedOrders.push({\n                    ...res.data[key],\n                id: key});\n            }\n            //console.log(fetchedOrders);\n            dispatch(fetchOrdersSuccess(fetchedOrders));\n          \n        })\n        .catch(err=> {\n           dispatch(fetchOrdersFail(err))\n        });\n    }\n   \n}","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.module.css';\n\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it taste well</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={ props.ingredients } />\n            </div>\n            <Button btnType=\"Danger\" clicked={props.checkoutCanceled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = (props) => { \n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch (props.elementType) {\n        \n        case ('input'):\n            inputElement = <input className={inputClasses.join(' ')}\n                                 {...props.elementConfig}\n                                 value={props.value}\n                                 onChange={props.changed} />;\n            break;\n        case ('textarea'):\n            inputElement = <input className={inputClasses.join(' ')}\n                                 {...props.Config}\n                                 value={props.value}\n                                 onChange={props.changed} />;\n            break;\n\n        case ('select'):\n            \n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input className={inputClasses.join(' ')}\n                                 {...props.elementConfig}\n                                  value={props.value}\n                                  onChange={props.changed} />;\n    }\n    return (\n        <div className={inputClasses.join(' ')}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n);\n}\n\nexport default input;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your Name'\n        },\n        value: '',\n        validation: {\n          required: true,\n          maxLength: 40\n        },\n        valid: false,\n        touched: false\n      },\n\n      street: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your Street'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n\n      zipCode: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your Zipcode'\n        },\n        value: '',\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5,\n          isNumeric: true\n        },\n        valid: false,\n        touched: false\n      },\n\n      country: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Country'\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false\n      },\n\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Your Email'\n        },\n        value: '',\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: 'select',\n        elementConfig: {\n          options: [\n            {\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'cheapest',\n              displayValue: 'Cheapest'\n            }\n          ]\n        },\n        value: 'fastest',\n        touched: false,\n        valid: true,\n        validation: {}\n\n      }\n    },\n    formIsValid: false\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedOrderForm = {      // copy\n      ...this.state.orderForm\n    };\n\n    const updatedFormElement = {  //copy\n      ...updatedOrderForm[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n    updatedFormElement.touched = true;\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\n    //console.log(updatedOrderForm)\n    //console.log(update)\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n    }\n    this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n\n  }\n\n  orderHandler = (event) => {\n    event.preventDefault();\n    const formData = {};\n    for (let formElementIdentifier in this.state.orderForm) {\n      formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n    }\n    //console.log(formData)\n    const order = {\n      ingredients: this.props.ings,\n      price: this.props.price,\n      orderData: formData,\n      userId: this.props.userId\n    }\n\n    this.props.onOrderBurger(order, this.props.token);\n\n  }\n\n  render() {\n    //console.log(this.state.orderForm);\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({id: key, config: this.state.orderForm[key]});\n    }\n    // console.log(formElementsArray)\n    let form = (\n      <form onSubmit={this.orderHandler}>\n\n        {formElementsArray.map(formElement => (<Input\n          key={formElement.id}\n          elementType={formElement.config.elementType}\n          elementConfig={formElement.config.elementConfig}\n          value={formElement.config.value}\n          invalid={!formElement.config.valid}\n          shouldValidate={formElement.config.validation}\n          touched={formElement.config.touched}\n          changed=\n          {(event)=> this.inputChangedHandler(event, formElement.id)}/>))}\n        <Button\n          btnType=\"Success\"\n          disabled={!this.state.formIsValid}\n          clicked={this.orderHandler}>ORDER</Button>\n\n      </form>\n    );\n    if (this.props.loading) {\n      form = (<Spinner/>)\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your ContactData</h4>\n        {form}\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n      ings: state.burgerBuilder.ingredients,\n      price: state.burgerBuilder.totalPrice,\n      loading: state.orders.loading,\n      token: state.auth.token,\n      userId: state.auth.userId\n    \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token)) // dispatching action creators\n\n  };\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React,  {Component} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    checkoutCanceledHandler = () => {\n        this.props.history.goBack();\n    }\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n    render () {\n        let summary = <Redirect to=\"/\" />\n        if (this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;  //after filling form redirect to home\n\n            summary = (\n            <div>\n                {purchasedRedirect}\n                <CheckoutSummary\n                    ingredients={this.props.ings}\n                    checkoutCanceled = {this.checkoutCanceledHandler}\n                    checkoutContinued= {this.checkoutContinuedHandler}  />\n                    <Route \n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData} />\n\n            </div>);\n\n               \n        }\n        \n        return summary\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        purchased: state.orders.purchased\n        \n    };\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport classes from './Order.module.css';\n\nconst order = (props) =>  {\n    const ingredients = [];\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({name: ingredientName\n                        , amount: props.ingredients[ingredientName]});\n    }\n    //console.log(ingredients);\n    const ingredientOutput = ingredients.map(ig => {\n        return <span\n                style={{textTransform: 'capitalize', \n                        display: 'inline-block',\n                        margin: '0 8px',\n                        border: '1px solid #ccc',\n                        padding: '5px'}}\n                \n                key={ig.name}>{ig.name} ({ig.amount})</span>\n    })\n    \n    return (\n    <div className={classes.Order}>\n        <p>\n            Ingredients: {ingredientOutput}\n        </p>\n        <p>Price:<strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n    </div>\n)\n};\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport axios from '../../axios-orders';\nimport Order from '../../components/Order/Order';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n\n    componentDidMount () {\n       this.props.onFetchOrders(this.props.token, this.props.userId);\n    };\n\n    render () {\n\n        let orders = <Spinner />\n        if (this.props.orders.length === 0)\n        {\n            orders = (\n                <h1 style={{color: 'black', textAlign: 'center', fontSize: '20px'}}>No Orders</h1>\n            )\n        }\n        else {\n            if (!this.props.loading) {\n                orders = ( \n                    this.props.orders.map(order=> (\n                    <Order key={order.id}\n                        ingredients={order.ingredients}\n                        price = {+order.price} />\n                )));\n            }\n            \n\n        }\n        return (\n            <div>\n               { orders }\n            </div>\n        );\n       \n        \n    }\n}\n\nconst mapStateToProps = state => {\n    //console.log(state.auth.token)\n    return {\n        orders: state.orders.orders,\n        loading: state.orders.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport classes from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                  type: 'email',\n                  placeholder: 'Mail Address'\n                },\n                value: '',\n                validation: {\n                  required: true,\n                  isEmail: true\n                },\n                valid: false,\n                touched: false\n              },\n              password: {\n                elementType: 'input',\n                elementConfig: {\n                  type: 'password',\n                  placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                  required: true,\n                  minLength: 6\n                },\n                valid: false,\n                touched: false\n              },\n              \n        },\n        isSignup: true\n    }\n\n    componentDidMount () {\n      console.log(this.props.buildingBurger)\n      if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\n        this.props.onSetAuthRedirectPath();\n      }\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (rules.required) {\n          isValid = value.trim() !== '' && isValid;\n        }\n    \n        if (rules.minLength) {\n          isValid = value.length >= rules.minLength && isValid;\n        }\n    \n        if (rules.maxLength) {\n          isValid = value.length <= rules.maxLength && isValid;\n        }\n    \n        if (rules.isEmail) {\n          const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n          isValid = pattern.test(value) && isValid\n        }\n    \n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n    \n        return isValid;\n      }\n\n      inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }    \n        };\n\n        this.setState({controls: updatedControls});\n    \n      }\n\n      submitHandler = (event) => {\n        event.preventDefault();  // Prevent the reloading of a page.\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\n      }\n\n      switchAuthModeHandler = () => {\n       // console.log(this.state.isSignup)\n        this.setState(prevState=> {\n          return {\n            isSignup: !prevState.isSignup\n          };\n        })\n      }\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({id: key, config: this.state.controls[key]\n        });\n        }\n\n        let form = formElementsArray.map(formElement=> (\n            <Input \n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed=\n                {(event)=> this.inputChangedHandler(event, formElement.id)}/>\n        ));\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n        if (this.props.error) {\n          errorMessage = (\n            <p style={{color: 'red'}}>{this.props.error.message}</p>                // firebase gives this error\n          );\n        }\n\n        let authRedirected = null;\n        if (this.props.isAuthenticated) {\n          authRedirected = <Redirect to={this.props.authRedirectPath} />\n        }\n\n\n        return (\n            <div className={classes.Auth}>\n              {authRedirected}\n              {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n              <Button\n                   btnType=\"Danger\"\n                   clicked={this.switchAuthModeHandler}>SWITCH TO { this.state.isSignup ? 'SIGN IN': 'SIGNUP'}\n              </Button>\n            </div>\n        );\n    } \n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n    buildingBurger: state.burgerBuilder.building,\n    authRedirectPath:  state.auth.authRedirectPath\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\n    onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom'; \nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions/index';\n\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        this.props.onLogout();\n    }\n\n    render () {\n        return <Redirect to=\"/\" />\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    };\n}\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n \n\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport CheckOut from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup(); \n  }\n  \n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" component={BurgerBuilder} />\n        <Redirect to=\"/\" /> \n      </Switch>\n\n    );\n\t\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={CheckOut} />  {/*  this is to know router about route*\n                                                             guarding routes       */}\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" component={BurgerBuilder} />\n          <Route path=\"/auth\" component={Auth} />\n          <Redirect to=\"/\" />  {/* anything unknown goes to root page */}\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n       <Layout>\n        {routes}\n       </Layout>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () =>dispatch(actions.authCheckState())\n  };\n};\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App)); // with router is need to solve breakage of router in root\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false   // to sae the burger state\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n        switch (action.type) {\n            case actionTypes.ADD_INGREDIENTS:\n                return {\n                    ...state,\n                    ingredients: {\n                        ...state.ingredients,                    // Deep Cloning\n                        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                    },\n                    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n                    building: true\n                }\n\n            case actionTypes.REMOVE_INGREDIENTS:\n                return {\n                    ...state,\n                    ingredients: {\n                        ...state.ingredients,\n                        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n\n                    },\n                    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n                    building: true\n\n                }\n\n            case actionTypes.SET_INGREDIENTS:\n                return {                           // this is called when we reload the page\n                    ...state,\n                    ingredients: {\n                        salad: action.ingredients.salad,\n                        bacon: action.ingredients.bacon,\n                        cheese: action.ingredients.cheese,\n                        meat: action.ingredients.meat\n                    },\n                    totalPrice: 4,\n                    error: false,\n                    building: false\n                };\n\n            case actionTypes.FETCH_INGREDIENTS_FAILED:\n                return {\n                    ...state,\n                    error: true\n                };\n            \n            default:\n                return state;\n            \n        }\n\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n\n    switch(action.type) {\n\n        case actionTypes.PURCHASE_BURGER_START:\n           // console.log(action.state,\"start\")\n            return {\n                ...state,\n                loading: true\n            }\n            \n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            //console.log(action.state, \"Success\")\n            const newOrder = {\n                ...action.orderData,\n                id: action.orderId\n               \n            }\n          //  console.log(newOrder, \"Success\")\n            return {\n                ...state,\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder)   // make new \n            };\n\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return {\n                ...state,\n                loading: false\n            };\n\n        case actionTypes.PURCHASE_INIT:\n            return {\n                ...state,\n                purchased: false\n            }\n\n        case actionTypes.FETCH_ORDERS_START:\n            return {\n                ...state,\n                loading: true\n            };\n\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return {\n                ...state,\n                orders: action.orders,\n                loading: false\n            };\n\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n\n        default:\n            return state;\n    };\n\n   \n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.AUTH_START:\n            return {\n                ...state,\n                error: null,\n                loading: true\n            }\n\n        case actionTypes.AUTH_SUCCESS:\n            return {\n                ...state,\n                token: action.idToken,\n                userId: action.userId,\n                error: null,\n                loading: false\n            }\n\n        case actionTypes.AUTH_FAIL:\n            return {\n                ...state,\n                error: action.error,\n                loading: false\n            }\n\n        case actionTypes.AUTH_LOGOUT:\n            return {\n                ...state,\n                token: null,\n                userId: null\n            }\n\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\n            return {\n                ...state,\n                authRedirectPath: action.path\n            }\n\n        default:\n            return state\n    }\n\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'; \nimport thunk from 'redux-thunk';\n\n\nimport './index.module.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers =  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    orders: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\n\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\nReactDOM.render(app, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}